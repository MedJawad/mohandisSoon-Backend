{"version":3,"sources":["components/Card/Card.jsx","actions/actionTypes.js","actions/auth.js","Auth/Auth.jsx","reducers/authReducer.js","reducers/index.js","store/index.js","App.js","index.js","assets/img/login-bg.jpg"],"names":["Card","className","this","props","plain","style","hCenter","title","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","stats","statsIcon","Component","userActions","REQUEST","SUCCESS","FAILURE","LOGOUT","cookies","Cookies","queryString","require","userCredentials","authOptions","method","url","data","stringify","headers","json","dispatch","type","axios","then","res","status","set","success","maxAge","token","role","catch","error","failure","get","Auth","useState","username","password","formData","setFormData","useDispatch","handleChange","event","name","target","value","isLoading","useSelector","state","auth","authRedirect","to","authFailedMessage","authError","message","includes","Col","sm","span","loginBackground","backgroundImage","loginBG","backgroundRepeat","backgroundPosition","backgroundSize","Container","Row","offset","background","margin","boxShadow","Form","onSubmit","preventDefault","FormGroup","controlId","FormControl","placeholder","required","onChange","css","width","textAlign","color","Button","fontSize","fontWeight","initialState","isLoaded","RootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","App","isAuthenticated","useEffect","authActions","path","render","from","ReactDOM","document","getElementById","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.949480ee.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Card extends Component {\n  render() {\n    return (\n      <div\n        className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}\n        style={this.props.style}\n      >\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}>\n          <h4 className=\"title\">{this.props.title}</h4>\n          <p className=\"category\">{this.props.category}</p>\n        </div>\n        <div\n          className={\n            \"content\" +\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\n          }\n        >\n          {this.props.content}\n\n          <div className=\"footer\">\n            {this.props.legend}\n            {this.props.stats != null ? <hr /> : \"\"}\n            <div className=\"stats\">\n              <i className={this.props.statsIcon} /> {this.props.stats}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","const userActions = {\r\n  REQUEST: \"REQUEST_USER\",\r\n  SUCCESS: \"SUCCESS_USER\",\r\n  FAILURE: \"FAILURE_USER\",\r\n  LOGOUT: \"LOGOUT_USER\",\r\n};\r\n\r\nexport default userActions;\r\n","import userActions from \"./actionTypes\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst queryString = require(\"querystring\");\n\nconst request = () => {\n    return { type: userActions.REQUEST };\n};\nconst success = data => {\n    return { type: userActions.SUCCESS, token: data.token, role: data.role };\n};\nconst failure = error => {\n    return { type: userActions.FAILURE, error };\n};\n\nconst loginWithCookie = () => {\n    const token = cookies.get(\"token\");\n    if (token)\n        return {\n            type: userActions.SUCCESS,\n            token: token.token,\n            role: token.role\n        };\n    return { type: \"COOKIE_NOT_FOUND\" };\n};\n\nconst login = userCredentials => {\n    const authOptions = {\n        method: \"POST\",\n        url: `/login`,\n        data: queryString.stringify(userCredentials),\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        json: true\n    };\n    return dispatch => {\n        dispatch(request());\n        axios(authOptions)\n            .then(res => (res.status === 200 ? res.data : null))\n            .then(data => {\n                cookies.set(\"token\", data.success, {\n                    maxAge: 3600\n                });\n                // console.log(data);\n\n                return dispatch(success(data.success));\n            })\n            .catch(error => dispatch(failure(error)));\n    };\n};\n\nconst logout = () => {\n    cookies.remove(\"token\");\n    return { type: userActions.LOGOUT };\n};\nexport default { login, loginWithCookie, logout };\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    FormGroup,\n    Col,\n    FormControl,\n    Form,\n    Row,\n    Container,\n    Alert\n} from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BeatLoader } from \"react-spinners\";\n\nimport Card from \"../components/Card/Card\";\nimport auth from \"../actions/auth\";\n\nimport loginBG from \"../assets/img/login-bg.jpg\";\n\nconst Auth = () => {\n    const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n    const dispatch = useDispatch();\n    function handleChange(event) {\n        const name = event.target.name;\n        if (name === \"username\") {\n            setFormData({\n                username: event.target.value,\n                password: formData.password\n            });\n        } else if (name === \"password\") {\n            setFormData({\n                username: formData.username,\n                password: event.target.value\n            });\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        dispatch(auth.login(formData));\n    }\n\n    const isLoading = useSelector(state => state.auth.isLoading);\n    const beatloaderCSS = {\n        width: \"50%\",\n        margin: \"auto;\",\n        textAlign: \"center\"\n    };\n    let authRedirect = null;\n    if (useSelector(state => state.auth.token != null)) {\n        authRedirect = <Redirect to=\"/\" />;\n    }\n\n    let authFailedMessage = null;\n    const authError = useSelector(state => state.auth.error);\n    if (authError) {\n        let message = authError.message || \"An error has occurred\";\n        if (message.includes(\"401\")) message = \"Wrong Username or Password\";\n        authFailedMessage = (\n            <Col sm={{ span: 12 }}>\n                {/* //   <Alert variant=\"danger\">\n      //     <p className=\"text-center\">{authError.message}</p>\n      //   </Alert> */}\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\n                    <strong>{message}</strong>\n                </div>\n            </Col>\n        );\n    }\n    const loginBackground = {\n        backgroundImage: \"url(\" + loginBG + \")\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\"\n    };\n    return (\n        <div className=\"content  loginContainer\" style={loginBackground}>\n            {authRedirect}\n            <Container>\n                <Row>\n                    <Col sm={{ span: 4, offset: 4 }}>\n                        <Card\n                            ctTableResponsive\n                            style={{\n                                background: \"#f7f7f7\",\n                                margin: \"100px auto\",\n                                boxShadow: \" 0px 4px 4px rgba(0, 0, 0, 0.5)\"\n                            }}\n                            content={\n                                <Form onSubmit={handleSubmit}>\n                                    <h2 className=\"text-center\">Log in</h2>\n                                    <FormGroup controlId=\"formHorizontalEmail\">\n                                        <Col sm={{ span: 12 }}>\n                                            <FormControl\n                                                type=\"text\"\n                                                name=\"username\"\n                                                placeholder=\"Username\"\n                                                required=\"required\"\n                                                value={formData.username}\n                                                onChange={handleChange}\n                                            />\n                                        </Col>\n                                    </FormGroup>\n\n                                    <FormGroup controlId=\"formHorizontalPassword\">\n                                        <Col sm={{ span: 12 }}>\n                                            <FormControl\n                                                type=\"password\"\n                                                name=\"password\"\n                                                placeholder=\"Password\"\n                                                required=\"required\"\n                                                value={formData.password}\n                                                onChange={handleChange}\n                                            />\n                                        </Col>\n                                    </FormGroup>\n\n                                    {isLoading ? (\n                                        <BeatLoader\n                                            css={beatloaderCSS}\n                                            color={\"#3472F7\"}\n                                        />\n                                    ) : (\n                                        <FormGroup>\n                                            <Col sm={{ span: 12 }}>\n                                                <Button\n                                                    type=\"submit\"\n                                                    className=\"btn btn-primary btn-fill btn-block\"\n                                                    style={{\n                                                        fontSize: \"15px\",\n                                                        fontWeight: \"bold\"\n                                                    }}\n                                                >\n                                                    Log in\n                                                </Button>\n                                            </Col>\n                                        </FormGroup>\n                                    )}\n                                    {authFailedMessage}\n                                </Form>\n                            }\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Auth;\n","import userActions from \"../actions/actionTypes\";\n\nconst initialState = {\n  isLoading: false,\n  isLoaded: false,\n  error: null,\n  token: null,\n};\n\nexport const auth = (state = initialState, action) => {\n  switch (action.type) {\n    case userActions.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false,\n        error: null,\n      };\n    case userActions.SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        error: null,\n        token: action.token,\n        role: action.role,\n      };\n    case userActions.FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: false,\n        error: action.error,\n        token: null,\n      };\n    case userActions.LOGOUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\r\n// import { files } from \"./filesReducer\";\r\n// import { locations } from \"./locationsReducer\";\r\nimport { auth } from \"./authReducer\";\r\nconst RootReducer = combineReducers({\r\n  auth,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import { composeWithDevTools } from \"redux-devtools-extension\";\nimport RootReducer from \"../reducers/index\";\nconst store = createStore(\n    RootReducer,\n    applyMiddleware(thunk)//composeWithDevTools()\n);\n\nexport default store;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/css/animate.min.css\";\nimport \"./assets/css/demo.css\";\nimport \"./assets/css/pe-icon-7-stroke.css\";\nimport \"./index.css\";\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Provider } from \"react-redux\";\n\nimport Auth from \"./Auth/Auth\";\nimport authActions from \"./actions/auth\";\n\nimport store from \"./store/index\";\n\nconst App = (props) => {\n  const isAuthenticated = useSelector((state) => state.auth.token != null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authActions.loginWithCookie());\n  }, [dispatch]);\n  // console.log(isAuthenticated);\n\n  let authRedirect = null;\n  if (!isAuthenticated) {\n    authRedirect = <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/login\" render={(props) => <Auth {...props} />} />\n        {authRedirect}\n        {/* {isAuthenticated && (\n          <Route path=\"/admin\" render={(props) => <AppEntry {...props} />} />\n        )} */}\n        {isAuthenticated && <Redirect from=\"/\" to=\"/admin/\" />}\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/login-bg.3c23ec62.jpg\";"],"sourceRoot":""}